#!/usr/bin/mawk -f

function scorecard(card,    a, b, win, i, matches) {
  split(card, a, /[|]/)
  split(a[1], b)
  for (i in b) #hash vals for easy check
    win[b[i]]++
  split(a[2], b)
  for (i in b) {
    if (b[i] in win)
      matches++
  }
  return matches
}

function f(cardno, depth,    i, r) {
  r = 1
  for (i = 1; i <= M[cardno]; i++)
    r += f(cardno + i, depth + 1)
  return r
}

{
  cardno = 0+$2
  cards[cardno] = $0
  if (m = scorecard($0))
    sum += 2^(m-1)
  M[cardno] = m
  cardmax = cardno
}

END {
  for (i = 1; i <= cardmax; i++)
    p2 += f(i)
  print sum, p2
}
